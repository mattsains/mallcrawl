<?phpclass Stores extends CI_Controller{    /// Adds a store to a user's list    /// POST: storeid, access_token    public function add()    {        if (!$this->input->post('access_token'))            error('You did not provide a facebook access token');        if (!$this->input->post('storeid'))            error('You did not provide a storeid to add');        $storeid=(int)$this->input->post('storeid');                $this->load->model('store');        $this->load->model('user');                $this->user->initialise_from_token($this->input->post('access_token'));                $this->user->add_store($storeid) or error('storeid is invalid');        send_json($storeid);    }    /// Removes a store from the user's list    /// POST: storeid, access_token    public function remove()    {        if (!$this->input->post('access_token'))            error('You did not provide a facebook access token');        if (!$this->input->post('storeid'))            error('You did not provide a storeid to add');        $storeid=(int)$this->input->post('storeid');                $this->load->model('store');        $this->load->model('user');                $this->user->initialise_from_token($this->input->post('access_token'));                $this->user->remove_store($storeid) or error('storeid is invalid');        send_json($storeid);    }        /// Returns a list of image urls for a store    /// POST: storeid    public function images()    {        if (!$this->input->post('storeid'))            error('You did not provide a storeid');        if (!$this->input->post('access_token'))            error('You did not provide an access_token');        $storeid=(int)$this->input->post('storeid');                $this->load->model('store');        $this->store->select($storeid) or error('storeid is invalid');                $output=$this->store->images($this->input->post('access_token'));        send_json($output);    }    ///This function responds to stores/images/add!    public function images_add()    {        if (!$this->input->post('storeid'))            error('You did not provide a storeid');        if ($_FILES['image']['name']=="")            error('You did not upload an image');        $storeid=(int)$this->input->post('storeid');        /***************************************************         *                                                 *         *                    ripped code                  *         *                                                 *         ***************************************************/                 $this->load->library(array('upload','image_lib'));                //upload validation        $upload['upload_path']=realpath('./application/assets/stores/'.$storeid);        $upload['allowed_types']='jpg|jpeg|png';        $upload['max_size']='500';//kB        $upload['max_width']='2000';//might need to change this some time        $upload['max_height']='2000';        $upload['encrypt_name']=true; //sacrificing good file names for safety        $this->upload->initialize($upload);        if (!$this->upload->do_upload('image'))        {            // error with upload            //TODO: Continue on here            return;        } else        {            //everything is OK with the image            // First thing: let's resize and crop            $orig_image=$this->upload->data();                        $thumb_width=200; //Byron please change this to your preference            $thumb_height=200;            if ($orig_image['image_width']!=$thumb_width || $orig_image['image_height']!=$thumb_height)            {                //set up resize config                $resize['image_library']='gd2';                $resize['source_image']=$orig_image['full_path'];                $resize['maintain_ratio']=true; //even though I do this myself                                if ($orig_image['image_width']/$orig_image['image_height']>$thumb_width/$thumb_height)                {                    //image is too wide                    $new_height=$thumb_height;                    $new_width=(int)(($orig_image['image_width']/$orig_image['image_height'])*$new_height);                } else                {                    //image is too high                    $new_width=$thumb_width;                    $new_height=(int)(($orig_image['image_height']/$orig_image['image_width'])*$new_width);                }                                $resize['height']=$new_height;                $resize['width']=$new_width;                                $this->image_lib->initialize($resize);                if (!$this->image_lib->resize())                {                    show_error("image resizing failed. As a workaround, try upload images that are exactly $thumb_width by $thumb_height pixels");                    die();                }                $this->image_lib->clear();                unset($resize); //what the diffs, for "efficiency"                                //time for cropping                    if ($new_height==$thumb_height)                {                    //image needs width cropping                    $margin=(int)(($new_width-$thumb_width)/2);                    $crop['x_axis']=$margin;                    $crop['width']=$new_width-$margin;                } else                {                    //image needs height cropping                    $margin=(int)(($new_height-$thumb_height)/2);                    $crop['y_axis']=$margin;                    $crop['height']=$new_height-$margin;                }                                $crop['image_library']='gd2';                $crop['source_image']=$orig_image['full_path'];                                $this->image_lib->initialize($crop);                if (!$this->image_lib->crop())                {                    show_error("image crop failed. As a workaround, try upload images that are exactly $thumb_width by $thumb_height pixels");                    die();                }                $this->image_lib->clear();                                if ($new_height==$thumb_height)                {                    //image needs width cropping                    $crop['x_axis']=0;                    $crop['width']=$thumb_width;                } else                {                    //image needs height cropping                    $crop['y_axis']=0;                    $crop['height']=$thumb_height;                }                                $this->image_lib->initialize($crop);                if (!$this->image_lib->crop())                {                    show_error("image crop failed. As a workaround, try upload images that are exactly $thumb_width by $thumb_height pixels");                    die();                }            }            $this->guide->set_image($this->user->uname.'/'.$orig_image['file_name']);            //image done. Join the guide-add branch        }        echo "done.";    }}