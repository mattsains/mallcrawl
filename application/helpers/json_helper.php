<?phpfunction send_json($data){    header('Content-Type: application/json');    echo json_encode($data);}function error($text){    header('HTTP/1.0 400 Bad Request');    $time=time();    log_message('debug',$text);    send_json(array('error'=>array('text'=>$text,'ref'=>'d'.$time)));    $handle=fopen("application/logs/d$time.php",'w');        ob_start();    debug_print_backtrace();    fwrite($handle,ob_get_clean());    fclose($handle);    die();}function server_error($text, $can_retry=false){    header('HTTP/1.0 500 Internal Server Error');    $time=time();    log_message('error',$text);    send_json(array('server_error'=>array('text'=>$text, 'ref'=>'e'.$time,'can_retry'=>$can_retry)));    $handle=fopen("application/logs/e$time.php",'w');    ob_start();    debug_print_backtrace();    fwrite($handle,ob_get_clean());    fclose($handle);    die();}/// This takes the whole facebook response in an error situation and translates it into a proper error message/// if this function ever returns true, the request should be retried. Otherwise this function will usually terminate the script./// This script will /always/ terminate unless return is truefunction facebook_error($response,$return=false){    $response=$response->error;    if ($response->code==2)    {        if (!$return)            server_error('facebook returned a server error.',true);        else return true;    }    if ($response->code==190)    {        if ($response->message=='The access token could not be decrypted')            error('access token is invalid');        else            error('authentication error. Try reauthenticating with facebook');    }}